<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="imgExample.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>