<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="imgExample.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>